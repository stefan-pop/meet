{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showMore","toggleShowMore","setState","event","this","props","className","summary","start","dateTime","timeZone","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleFocus","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","displayedEvents","handleInput","e","updateEventsLength","htmlFor","mockData","JSON","parse","stringify","extractLocations","Set","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","getAccessToken","token","url","axios","get","data","stringiy","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","App","locationEvents","mounted","slice","inputValue","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"mPAkDeA,E,4MA9CXC,MAAQ,CACJC,UAAU,G,EAIdC,eAAiB,WACb,EAAKC,SAAS,CACVF,UAAW,EAAKD,MAAMC,Y,4CAI9B,WAEI,IAAQG,EAAUC,KAAKC,MAAfF,MAER,OACI,sBAAKG,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BH,EAAMI,UAEnC,sBAAKD,UAAU,aAAf,UACI,+BAAOH,EAAMK,MAAMC,WACnB,2CAAYN,EAAMK,MAAME,SAAxB,WAGJ,gCACI,iCAAOP,EAAMI,QAAb,SACA,+BAAOJ,EAAMQ,cAIhBP,KAAKL,MAAMC,SACR,sBAAKM,UAAU,YAAf,UACI,8CACA,mBAAGM,KAAMT,EAAMU,SAAf,4CACA,mBAAGP,UAAU,oBAAb,SAAkCH,EAAMW,iBAE5C,GAEJ,qBAAKR,UAAU,cAAf,SACI,wBAAQS,QAASX,KAAKH,eAAtB,SAAuCG,KAAKL,MAAMC,SAAW,YAAc,uB,GAzC3EgB,aCiBLC,E,4JAdX,WACI,IAAQC,EAAWd,KAAKC,MAAhBa,OAER,OACI,oBAAIZ,UAAU,aAAd,SACKY,EAAOC,KAAI,SAAAhB,GAAK,OACb,6BACI,cAAC,EAAD,CAAOA,MAAOA,KADTA,EAAMiB,a,GARXJ,aCkETK,E,4MAlEXtB,MAAQ,CACJuB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGrBC,mBAAqB,SAACvB,GAClB,IAAMwB,EAAQxB,EAAMyB,OAAOD,MACrBJ,EAAc,EAAKlB,MAAMwB,UAAUC,QAAO,SAACnB,GAC7C,OAAOA,EAASoB,cAAcC,QAAQL,EAAMI,gBAAkB,KAElE,EAAK7B,SAAS,CACVoB,MAAOK,EACPJ,gBAGgB,IAAjBI,EAAMM,OACL,EAAK/B,SAAS,CACVsB,qBAAiBC,IAGrB,EAAKvB,SAAS,CACVsB,iBAAiB,K,EAK7BU,YAAc,a,EAIdC,kBAAoB,SAACC,GACjB,EAAKlC,SAAS,CACVoB,MAAOc,EACPZ,iBAAiB,IAErB,EAAKnB,MAAMgC,aAAaD,I,4CAG5B,WAAU,IAAD,OACL,OACI,sBAAK9B,UAAU,aAAf,UACI,0CACA,0DACA,sBAAKA,UAAU,qBAAf,UACI,uBACIgC,KAAK,OACLhC,UAAU,OACVqB,MAAOvB,KAAKL,MAAMuB,MAClBiB,SAAUnC,KAAKsB,mBACfc,QAAS,WAAO,EAAKtC,SAAS,CAAEsB,iBAAiB,OAErD,qBAAIlB,UAAU,cAAcmC,MAAOrC,KAAKL,MAAMyB,gBAAkB,GAAK,CAACkB,QAAS,QAA/E,UACKtC,KAAKL,MAAMwB,YAAYJ,KAAI,SAACiB,GAAD,OACxB,oBAAqBrB,QAAS,kBAAM,EAAKoB,kBAAkBC,IAA3D,SAAyEA,GAAhEA,MAEb,oBAAIrB,QAAS,kBAAM,EAAKoB,kBAAkB,QAA1C,SACI,8D,GA1DHnB,aCuBV2B,E,4MArBX5C,MAAQ,CACJ6C,gBAAiB,I,EAGrBC,YAAc,SAACC,GACX,EAAK5C,SAAS,CACV0C,gBAAiBE,EAAElB,OAAOD,QAE9B,EAAKtB,MAAM0C,mBAAmBD,EAAElB,OAAOD,Q,4CAG3C,WAAU,IAAD,OACL,OACI,sBAAKrB,UAAU,gBAAf,UACI,uBAAO0C,QAAQ,sBAAf,+BADJ,IACmE,uBAC/D,uBAAOV,KAAK,SAASlB,GAAG,sBAAsBO,MAAOvB,KAAKL,MAAM6C,gBAAiBL,SAAU,SAACO,GAAD,OAAO,EAAKD,YAAYC,a,GAjBtG9B,a,6CCgFvBiC,EAAWC,KAAKC,MAAMD,KAAKE,UAlFb,CAChB,CACI,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACP,MAAS,oCACT,MAAQ,GAEZ,UAAa,CACT,MAAS,oCACT,MAAQ,GAEZ,MAAS,CACL,SAAY,4BACZ,SAAY,iBAEhB,IAAO,CACH,SAAY,4BACZ,SAAY,iBAEhB,iBAAoB,6BACpB,kBAAqB,CACjB,SAAY,4BACZ,SAAY,iBAEhB,QAAW,wCACX,SAAY,EACZ,UAAa,CACT,YAAc,GAElB,UAAa,WAEjB,CACI,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACP,MAAS,oCACT,MAAQ,GAEZ,UAAa,CACT,MAAS,oCACT,MAAQ,GAEZ,MAAS,CACL,SAAY,4BACZ,SAAY,iBAEhB,IAAO,CACH,SAAY,4BACZ,SAAY,iBAEhB,iBAAoB,6BACpB,kBAAqB,CACjB,SAAY,4BACZ,SAAY,iBAEhB,QAAW,wCACX,SAAY,EACZ,UAAa,CACT,YAAc,GAElB,UAAa,c,iCCzERC,EAAmB,SAACnC,GAC7B,IAAImC,EAAmBnC,EAAOC,KAAI,SAAChB,GAAD,OAAWA,EAAMQ,YAEnD,OADa,YAAO,IAAI2C,IAAID,KAI1BE,EAAc,WAChB,GAAIC,OAAOC,QAAQC,WAAaF,OAAO7C,SAASgD,SAAU,CACtD,IAAIC,EACAJ,OAAO7C,SAASkD,SAChB,KACAL,OAAO7C,SAASmD,KAChBN,OAAO7C,SAASgD,SACpBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASJ,OAAO7C,SAASkD,SAAW,KAAOL,OAAO7C,SAASmD,KAC3DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,IAInCG,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAM,+DAAD,OAAgEF,IACzFG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMF,UAHT,cACTG,EADS,yBAIRA,GAJQ,2CAAH,sDAOVC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAT,EAAA,6DACPU,EAAaC,mBAAmBF,GADzB,SAEkBR,MAC3B,2EAAkFS,GACpFR,MAAK,SAACC,GACJ,OAAOA,EAAIC,UACZC,OAAM,SAACC,GAAD,OAAWA,KANP,wBAELM,EAFK,EAELA,eAMQC,aAAaC,QAAQ,eAAgBF,GARxC,kBASNA,GATM,2CAAH,sDAYDG,EAAS,uCAAG,kCAAAf,EAAA,yDACrBgB,IAAUzE,SAENgD,OAAO7C,SAASC,KAAKsE,WAAW,oBAHf,uBAIjBD,IAAUE,OAJO,kBAKVlC,GALU,uBAQDmC,IARC,YAQfC,EARe,gCAWjB9B,IACM+B,EAAM,gFAAuFD,EAZlF,UAaIE,IAAMC,IAAIF,GAbd,eAaXd,EAbW,QAcNiB,OACH5D,EAAYwB,EAAiBmB,EAAOiB,KAAKvE,QAC7C4D,aAAaC,QAAQ,aAAc7B,KAAKwC,SAASlB,EAAOiB,OACxDX,aAAaC,QAAQ,YAAa7B,KAAKE,UAAUvB,KAErDoD,IAAUE,OAnBO,kBAoBVX,EAAOiB,KAAKvE,QApBF,4CAAH,qDAyBTkE,EAAc,uCAAG,sCAAAnB,EAAA,yDACpBD,EAAcc,aAAaa,QAAQ,gBADf,KAEP3B,GAFO,qCAEeD,EAAWC,GAF1B,6BAEpB4B,EAFoB,KAIrB5B,IAAe4B,EAAWrB,MAJL,kCAKhBO,aAAae,WAAW,gBALR,eAMhBC,EAAe,IAAIC,gBAAgBvC,OAAO7C,SAASqF,QANnC,UAOHF,EAAaN,IAAI,QAPd,WAOhBd,EAPgB,yCASIa,IAAMC,IAAI,kFATd,eASZS,EATY,OAUVC,EAAYD,EAAQR,KAApBS,QAVU,kBAWV1C,OAAO7C,SAASC,KAAOsF,GAXb,iCAafxB,GAAQD,EAASC,IAbF,iCAenBV,GAfmB,4CAAH,qDCFZmC,E,4MAxDdpG,MAAQ,CACPmB,OAAQ,GACRW,UAAW,GACXe,gBAAiB,I,EAmBlBP,aAAe,SAAC1B,GACfqE,IAAYb,MAAK,SAACjD,GACjB,IAAMkF,EAA+B,QAAbzF,EAAsBO,EAC9CA,EAAOY,QAAO,SAAC3B,GAAD,OAAWA,EAAMQ,WAAaA,KACxC,EAAK0F,SACR,EAAKnG,SAAS,CACbgB,OAAQkF,EAAeE,MAAM,EAAG,EAAKvG,MAAM6C,uB,uDAtB/C,WAAqB,IAAD,OACnBxC,KAAKiG,SAAU,EACfrB,IAAYb,MAAK,SAACjD,GACb,EAAKmF,SACR,EAAKnG,SAAS,CACbgB,OAAQA,EAAOoF,MAAM,EAAG,EAAKvG,MAAM6C,iBACnCf,UAAWwB,EAAiBnC,U,kCAMhC,WACCd,KAAKiG,SAAU,I,gCAehB,SAAmBE,GAClBnG,KAAKF,SAAS,CACb0C,gBAAiB2D,M,oBAInB,WAAU,IAAD,OACR,OACC,sBAAKjG,UAAU,MAAf,UACC,cAAC,EAAD,CACCuB,UAAWzB,KAAKL,MAAM8B,UACtBQ,aAAcjC,KAAKiC,eAGpB,cAAC,EAAD,CAAgBU,mBAAoB,SAACpB,GAAD,OAAW,EAAKoB,mBAAmBpB,MAEvE,cAAC,EAAD,CAAWT,OAAQd,KAAKL,MAAMmB,gB,GAnDhBF,aCGEwF,QACW,cAA7BhD,OAAO7C,SAAS8F,UAEe,UAA7BjD,OAAO7C,SAAS8F,UAEhBjD,OAAO7C,SAAS8F,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SFoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAACwD,GACLA,EAAaC,gBAEdtD,OAAM,SAACC,GACNsD,QAAQtD,MAAMA,EAAMuD,YE/G5BnB,M","file":"static/js/main.2e999a62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showMore: false\r\n    }\r\n\r\n    // Toggles the state 'showMore'\r\n    toggleShowMore = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event } = this.props;\r\n\r\n        return (\r\n            <div className='event-wrapper'>\r\n                <h2 className=\"event-title\">{event.summary}</h2>\r\n\r\n                <div className='event-time'>\r\n                    <span>{event.start.dateTime}</span>\r\n                    <span>{` (${event.start.timeZone}) `}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{event.summary} | </span>\r\n                    <span>{event.location}</span>\r\n                </div>\r\n\r\n                {/* Details div */}\r\n                {this.state.showMore ? (\r\n                    <div className='show-more'>\r\n                        <h4>About event:</h4>\r\n                        <a href={event.htmlLink}>See details on Google Calendar</a>\r\n                        <p className=\"event-description\">{event.description}</p>\r\n                    </div>\r\n                ) : ''}\r\n\r\n                <div className=\"btn-wrapper\">\r\n                    <button onClick={this.toggleShowMore}>{this.state.showMore ? 'Show less' : 'Show more'}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n\r\n    render() {\r\n        const { events } = this.props;\r\n\r\n        return (\r\n            <ul className=\"event-list\">               \r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} /> \r\n                    </li>)}\r\n            </ul> \r\n        )\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({\r\n            query: value,\r\n            suggestions\r\n        });\r\n\r\n        if(value.length === 0) {\r\n            this.setState({\r\n                showSuggestions: undefined\r\n            })\r\n        }else {\r\n            this.setState({\r\n                showSuggestions: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFocus = () => {\r\n\r\n    }\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <h1>Meet App</h1>\r\n                <h3>Choose your nearest city</h3>\r\n                <div className=\"suggestion-wrapper\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"city\"\r\n                        value={this.state.query}\r\n                        onChange={this.handleInputChanged}\r\n                        onFocus={() => {this.setState({ showSuggestions: true })}}\r\n                    />\r\n                    <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : {display: 'none'}}>\r\n                        {this.state.suggestions.map((suggestion) => (\r\n                            <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                        ))}\r\n                        <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                            <b>See all cities</b>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, {Component} from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        displayedEvents: 32\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            displayedEvents: e.target.value\r\n        })\r\n        this.props.updateEventsLength(e.target.value);    \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='events-number'>\r\n                <label htmlFor='events-number-input'>Number of events:</label> <br />\r\n                <input type='number' id='events-number-input' value={this.state.displayedEvents} onChange={(e) => this.handleInput(e)}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockDataRAW = [\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181161784712000\\\"\",\r\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:17:46.000Z\",\r\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n        \"summary\": \"Learn JavaScript\",\r\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n        \"location\": \"London, UK\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n            },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n            },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n            },\r\n        \"eventType\": \"default\"\r\n    },\r\n    {\r\n        \"kind\": \"calendar#event\",\r\n        \"etag\": \"\\\"3181159875584000\\\"\",\r\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n        \"status\": \"confirmed\",\r\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n        \"created\": \"2020-05-19T19:14:30.000Z\",\r\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n        \"summary\": \"React is Fun\",\r\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n        \"location\": \"Berlin, Germany\",\r\n        \"creator\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n            },\r\n        \"organizer\": {\r\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n            \"self\": true\r\n            },\r\n        \"start\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"end\": {\r\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n        \"originalStartTime\": {\r\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n            },\r\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n        \"sequence\": 0,\r\n        \"reminders\": {\r\n            \"useDefault\": true\r\n            },\r\n        \"eventType\": \"default\"\r\n    },\r\n\r\n];\r\n\r\nconst mockData = JSON.parse(JSON.stringify(mockDataRAW)); //convert JSON to Js\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl = \r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n}\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`)\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n    return result;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        \"https://dld2mjoeyk.execute-api.eu-central-1.amazonaws.com/dev/api/token\" + \"/\" + encodeCode\r\n    ).then((res) => {\r\n        return res.json();\r\n    }).catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n    return access_token;\r\n}\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = \"https://dld2mjoeyk.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + \"/\" + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringiy(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\n//get the token\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        if (!code) {\r\n            const results = await axios.get(\"https://dld2mjoeyk.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}","import React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport './App.css';\nimport './nprogress.css';\nimport { extractLocations, getEvents } from './api';\n\n\nclass App extends Component {\n\tstate = {\n\t\tevents: [],\n\t\tlocations: [],\n\t\tdisplayedEvents: 32\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mounted = true;\n\t\tgetEvents().then((events) => {\n\t\t\tif (this.mounted) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tevents: events.slice(0, this.state.displayedEvents),\n\t\t\t\t\tlocations: extractLocations(events)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.mounted = false;\n\t}\n\n\tupdateEvents = (location) => {\n\t\tgetEvents().then((events) => {\n\t\t\tconst locationEvents = (location === 'all') ? events : \n\t\t\tevents.filter((event) => event.location === location);\n\t\t\tif (this.mounted) {\n\t\t\t\tthis.setState({ \n\t\t\t\t\tevents: locationEvents.slice(0, this.state.displayedEvents)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateEventsLength(inputValue) {\n\t\tthis.setState({\n\t\t\tdisplayedEvents: inputValue\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<CitySearch\n\t\t\t\t\tlocations={this.state.locations} \n\t\t\t\t\tupdateEvents={this.updateEvents} \n\t\t\t\t/>\n\n\t\t\t\t<NumberOfEvents updateEventsLength={(value) => this.updateEventsLength(value)} />\n\n\t\t\t\t<EventList events={this.state.events} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}